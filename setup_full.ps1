# –í–∫–ª—é—á–∞–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É TLS 1.2
[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12

function SmartDownload {
    param (
        [string]$url,
        [string]$output
    )
    Write-Host "‚¨áÔ∏è –ó–∞–≥—Ä—É–∂–∞—é: $url"
    try {
        if (Get-Command Start-BitsTransfer -ErrorAction SilentlyContinue) {
            Start-BitsTransfer -Source $url -Destination $output -ErrorAction Stop
            return
        }
    } catch {
        Write-Host "‚ö†Ô∏è BITS –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª, –ø—Ä–æ–±—É–µ–º WebClient..."
    }
    try {
        $wc = New-Object System.Net.WebClient
        $wc.Headers.Add("user-agent", "PowerShell")
        $wc.DownloadFile($url, $output)
    } catch {
        Write-Error "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ ${url}: ${_}"
        throw
    }
}

$arch = (Get-CimInstance Win32_OperatingSystem).OSArchitecture
$is64bit = $arch -like "*64*"

function InstallPython {
    Write-Host "üß™ –ü—Ä–æ–≤–µ—Ä—è—é Python..."
    if (-not (Get-Command python -ErrorAction SilentlyContinue)) {
        Write-Host "‚öôÔ∏è –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é Python ($arch)..."
        $installer = "$env:TEMP\python-installer.exe"
        $url = if ($is64bit) {
            "https://www.python.org/ftp/python/3.12.0/python-3.12.0-amd64.exe"
        } else {
            "https://www.python.org/ftp/python/3.12.0/python-3.12.0.exe"
        }
        SmartDownload $url $installer
        Start-Process -FilePath $installer -ArgumentList "/quiet InstallAllUsers=1 PrependPath=1" -Wait
        Remove-Item $installer -Force
    } else {
        Write-Host "‚úÖ Python —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
    }
}

function InstallGit {
    Write-Host "üß™ –ü—Ä–æ–≤–µ—Ä—è—é Git..."
    if (-not (Get-Command git -ErrorAction SilentlyContinue)) {
        Write-Host "‚öôÔ∏è –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é Git ($arch)..."
        $installer = "$env:TEMP\git-installer.exe"
        $url = if ($is64bit) {
            "https://github.com/git-for-windows/git/releases/download/v2.42.0.windows.1/Git-2.42.0-64-bit.exe"
        } else {
            "https://github.com/git-for-windows/git/releases/download/v2.42.0.windows.1/Git-2.42.0-32-bit.exe"
        }
        SmartDownload $url $installer
        Start-Process -FilePath $installer -ArgumentList "/VERYSILENT" -Wait
        Remove-Item $installer -Force
    } else {
        Write-Host "‚úÖ Git —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
    }
}

function InstallMitmproxy {
    Write-Host "‚öôÔ∏è –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é mitmproxy..."
    & python -m pip install --upgrade pip
    & python -m pip install mitmproxy --quiet

    Write-Host "üöÄ –ó–∞–ø—É—Å–∫–∞—é mitmproxy –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞..."
    Start-Process -FilePath "mitmproxy" -ArgumentList "--quit" -NoNewWindow -Wait
}

function InstallMitmproxyCert {
    Write-Host "üîí –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç mitmproxy..."

    $mitmproxyCertDir = "$env:USERPROFILE\.mitmproxy"
    $certFile = Join-Path $mitmproxyCertDir "mitmproxy-ca-cert.pem"

    $timeout = 30
    $elapsed = 0
    while (-not (Test-Path $certFile) -and ($elapsed -lt $timeout)) {
        Start-Sleep -Seconds 1
        $elapsed++
    }

    if (Test-Path $certFile) {
        Import-Certificate -FilePath $certFile -CertStoreLocation Cert:\CurrentUser\Root
        Write-Host "‚úÖ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
    }
    else {
        Write-Warning "‚ö†Ô∏è –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç mitmproxy –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ $certFile –ø–æ—Å–ª–µ –æ–∂–∏–¥–∞–Ω–∏—è $timeout —Å–µ–∫."
    }
}

function CloneRepo {
    $repoUrl = "https://github.com/adamtuwima/bandana.git"
    $cloneDir = "$env:USERPROFILE\mitmproxy-config"
    if (Test-Path $cloneDir) {
        Remove-Item -Recurse -Force $cloneDir
    }
    git clone $repoUrl $cloneDir
    return $cloneDir
}

function RunMitmproxy($cloneDir) {
    Write-Host "üöÄ –ó–∞–ø—É—Å–∫–∞—é mitmproxy..."
    $scriptPath = Join-Path $cloneDir "live_script.py"
    Start-Process -NoNewWindow -FilePath "mitmproxy" -ArgumentList "--scripts", $scriptPath
    Write-Host "‚úÖ Mitmproxy –∑–∞–ø—É—â–µ–Ω."
}

try {
    InstallPython
    InstallGit
    InstallMitmproxy
    InstallMitmproxyCert
    $dir = CloneRepo
    RunMitmproxy $dir
}
catch {
    Write-Error "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: ${_}"
}